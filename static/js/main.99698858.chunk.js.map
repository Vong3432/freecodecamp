{"version":3,"sources":["components/TodoItem.js","components/TodosData.js","FetchingTutor1.js","components/Form.js","components/MemeGenerator.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","props","react_default","a","createElement","className","type","checked","item","completed","onChange","handleChange","id","text","TodosData","FetchingTutor1","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","character","inherits","createClass","key","value","_this2","setState","fetch","then","res","json","data","name","Component","Form","firstName","lastName","isFriendly","gender","bind","assertThisInitialized","event","_event$target","target","defineProperty","placeholder","MemeGenerator","topText","bottomText","randomImg","allMemeImgs","handleSubmit","memes","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","class","onSubmit","src","Header","apply","arguments","App","todos","prevState","map","todo","components_TodoItem","src_FetchingTutor1","components_Form","components_Header","components_MemeGenerator","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99698858.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction TodoItem(props){\r\n    return(\r\n        <div className=\"todo-item\">\r\n            <input type=\"checkbox\" checked={props.item.completed} onChange = {()=> props.handleChange(props.item.id)}/>\r\n            <p>{props.item.text}</p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoItem","const TodosData = [\r\n    {\r\n        id: 1,\r\n        text:\"Take out the trash\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text:\"Learn react\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text:\"Buy new laptop\",\r\n        completed: false\r\n    },\r\n]\r\n\r\nexport default TodosData","import React, { Component } from 'react'\r\n\r\nexport class FetchingTutor1 extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            loading: false,\r\n            character: {}\r\n        }        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState( {loading: true} )\r\n        fetch(\"https://swapi.co/api/people/1\")\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                this.setState({\r\n                    loading: false,\r\n                    character: data\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const text = this.state.loading ? \"Loading...\" : this.state.character.name\r\n\r\n        return (\r\n        <div>\r\n            <p>{text}</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FetchingTutor1\r\n","import React, { Component } from 'react'\r\n\r\nexport class Form extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            isFriendly: false,\r\n            gender: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n\r\n        const {name, value, type, checked} = event.target        \r\n        type === \"checkbox\" \r\n        ? this.setState({[name]: checked}) \r\n        : this.setState({            \r\n            // eg: [firstName]: \"value\"\r\n            // [gender]: \"get value from input named 'gender'\"\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <input type=\"text\" \r\n                name=\"firstName\" \r\n                placeholder=\"First Name\" \r\n                onChange={this.handleChange}\r\n                value={this.state.firstName}\r\n                />\r\n                <br />\r\n\r\n                <input type=\"text\" \r\n                name=\"lastName\" \r\n                placeholder=\"Last Name\" \r\n                onChange={this.handleChange}\r\n                value={this.state.lastName}\r\n                />\r\n\r\n                <br />\r\n                <textarea value={\"Some default value\"}></textarea>\r\n                <input \r\n                type=\"checkbox\"\r\n                name=\"isFriendly\"\r\n                checked={this.state.isFriendly}\r\n                onChange={this.handleChange}\r\n                />\r\n\r\n                <br />\r\n\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        value=\"male\"\r\n                        checked={this.state.gender === \"male\"}\r\n                        onChange={this.handleChange}\r\n                    /> male\r\n                </label>\r\n\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        value=\"female\"\r\n                        checked={this.state.gender === \"female\"}\r\n                        onChange={this.handleChange}\r\n                    /> female\r\n                </label>\r\n\r\n                <h1>{this.state.firstName} {this.state.lastName}</h1>\r\n                <h2>You are a {this.state.gender}</h2>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react'\r\n\r\nexport class MemeGenerator extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"https://imgflip.com/s/meme/Futurama-Fry.jpg\",\r\n            allMemeImgs:[]\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then( res => res.json() )\r\n            .then( res => {\r\n                const {memes} = res.data\r\n                this.setState({ allMemeImgs: memes})\r\n            })\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        const { name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(event)\r\n    {\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const randMemeImg = this.state.allMemeImgs[randNum].url\r\n        this.setState({\r\n            randomImg: randMemeImg\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <form class=\"meme-form\" onSubmit={this.handleSubmit}>\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"topText\" \r\n                    placeholder=\"Top text...\" \r\n                    value={this.state.topText}\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <input type=\"text\" \r\n                    name=\"bottomText\" \r\n                    placeholder=\"Bottom text...\" \r\n                    value={this.state.bottomText} \r\n                    onChange={this.handleChange}\r\n                />\r\n                <button>Generate</button>\r\n\r\n            </form>\r\n\r\n            <div className=\"meme\">\r\n                <img src={this.state.randomImg} />\r\n                <h2 className=\"top\">{this.state.topText}</h2>\r\n                <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator\r\n","import React, { Component } from 'react'\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" />\r\n                <p>Meme generator</p>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport TodoItem from \"./components/TodoItem\"\nimport './App.css';\nimport TodosData from \"./components/TodosData\"\nimport FetchingTutor1 from \"./FetchingTutor1\"\nimport Form from \"./components/Form\"\nimport MemeGenerator from \"./components/MemeGenerator\"\nimport Header from \"./components/Header\"\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n        todos: TodosData,\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n\n  handleChange(id)\n  {\n      this.setState(prevState => {\n        const updatedTodos = prevState.todos.map(todo => {\n            if( todo.id === id ){\n              todo.completed = !todo.completed\n            }\n\n            return todo\n        })\n\n        return{\n          todos: updatedTodos\n        }\n      })\n  }\n\n  render(){\n    const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item} handleChange = {this.handleChange}/>)\n    return (\n      <div className=\"todo-list\">\n          {/* {todoItems} */}\n          <FetchingTutor1 />\n          <Form />\n          <Header />\n          <MemeGenerator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}